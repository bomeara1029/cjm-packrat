# NODE
NODE_ENV=                           #development or production

# DB
MYSQL_ROOT_PASSWORD=                # secure password
PACKRAT_DB_PORT=                    # 3306

# CLIENT
PACKRAT_CLIENT_PORT=                # 3000
PACKRAT_CLIENT_ENDPOINT=            # https://<host> (could also probably be the name of relevant docker container)
REACT_APP_PACKRAT_SERVER_ENDPOINT=  # https://<host>/server (could also probably be the name of relevant docker container)

# SERVER
PACKRAT_SERVER_PORT=                # 4000
PACKRAT_DATABASE_URL=               # mysql://<user>:<password>@packrat-db-<dev/prod>:3306/Packrat
PACKRAT_ITOPS_EMAIL=                # email used for IT OPS
PACKRAT_SESSION_SECRET=             # secret string
PACKRAT_EDAN_AUTH_KEY=              # auth key associated with EDAN server
PACKRAT_EDAN_SERVER=                # EDAN server (e.g. https://3d-api.cjmoyna.com/packrat/)
PACKRAT_EDAN_3D_API=                # EDAN 3D api (e.g. https://3d-api.cjmoyna.com/packrat/) [both go to same server in current implementation]
PACKRAT_EDAN_APPID=                 # app id associated with the auth key in the EDAN server
PACKRAT_EDAN_UPSERT_RESOURCE_ROOT=  # storage space (e.g. https://3d-api.nyc3.cdn.digitaloceanspaces.com/)
PACKRAT_EDAN_STAGING_ROOT=          # /3ddigip01/upload (location of packrat staging volume in host and docker container) - doesn't have to exist on startup
PACKRAT_EDAN_RESOURCES_HOTFOLDER=   # /3ddigip01/3d_api_hot_folder/prod/3d_api_hot_folder (location of packrat model downloads volume in host and docker container) - doesn't have to exist on startup
PACKRAT_OCFL_STORAGE_ROOT=          # /var/Storage/Repository (location of packrat ocfl db volume in host and docker container) - doesn't have to exist on startup
PACKRAT_OCFL_STAGING_ROOT=          # /var/Storage/Staging (location of packrat file staging volume in host and docker container) - doesn't have to exist on startup
PACKRAT_COOK_SERVER_URL=            # url to cook server (e.g. http://192.168.20.80:8000/)
PACKRAT_AUTH_TYPE=                  # LDAP for ldap or LOCAL to log in with email as username and password (no authentication)
PACKRAT_LDAP_SERVER=                # ldap://ldap-service if using the provided ldap server for authentication
PACKRAT_LDAP_PASSWORD=              # secure password used to log in as the admin on the provided ldap server
PACKRAT_LDAP_CN=                    # CN=admin or whatever you would like. note this line should read something like PACKRAT_LDAP_CN=CN=admin
PACKRAT_LDAP_OU=                    # " " easier to have the admin outside of an organizational unit if using the provided ldap server solely for packrat authentication. this line should then be PACKRAT_LDAP_OU=" " with a space in between the quotes
PACKRAT_LDAP_DC=                    # DC=cjmoyna,DC=com so, PACKRAT_LDAP_DC=DC=cjmoyna,DC=com. The admin login DN for LDAP server is the combination of CN, OU, and DN, (e.g. for the suggested inputs the admin DN is then cn=admin,dc=cjmoyna,dc=com)
PACKRAT_SMTP_HOST=                  # SMTP host for email notifications on cook job statuses
PACKRAT_SMTP_PORT=                  # SMTP port for email notifications on cook job statuses
PACKRAT_SMTP_SECURE=                # SMTP secure(?) for email notifications on cook job statuses
PACKRAT_SMTP_AUTHUSER=              # SMTP auth user
PACKRAT_SMTP_AUTHPASSWORD=          # SMTP auth password
PACKRAT_LOG_ROOT=                   # /var/logs (location of packrat logs volume in host and docker container) - doesn't have to exist on startup

# S3FS
S3FS_MOUNT_POINT=                   # /mnt/s3 (location of S3FS mount point in host and docker container) - doesn't have to exist on startup
S3FS_PASSWD_FILE=                   # ${HOME}/.passwd-s3fs (S3 password file of the form <public-key>:<secret> )
AWS_S3_BUCKET=                      # bucket name (e.g. 3d-api)
AWS_S3_URL=                         # S3 url (e.g. https://nyc3.digitaloceanspaces.com/ for DO or https://s3.us-west-2.amazonaws.com for AWS)
S3FS_ARGS=                          # allow_other,use_path_request_style,nonempty,default_acl=public-read (recommended args for S3FS to run with)
S3FS_DEBUG=                         # 1 for debug 0 for none
S3FS_UID=                           # 1000 or whatever uid is needed
S3FS_GID=                           # 1000 or whatever gid is needed

# SOLR
PACKRAT_SOLR_PORT=                  # 8983
PACKRAT_SOLR_HOST=                  # packrat-solr-<dev/prod> (name of relevant docker container)

# PROXY
PACKRAT_PROXY_PORT=                 # 80
