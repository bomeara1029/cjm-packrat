version: "3.4"

services:
    packrat-proxy:
        container_name: packrat-proxy
        image: packrat-proxy
        restart: always
        build:
            context: ../..
            dockerfile: ./conf/docker/proxy-prod.Dockerfile
            target: proxy
        ports:
            - $PACKRAT_PROXY_PORT:80

    packrat-client:
        container_name: packrat-client
        image: packrat-client
        restart: always
        build:
            context: ../..
            dockerfile: ./conf/docker/client-prod.Dockerfile
            target: client
        ports:
            - $PACKRAT_CLIENT_PORT:3000
        environment:
            - NODE_ENV=$NODE_ENV
            - REACT_APP_PACKRAT_SERVER_ENDPOINT=$REACT_APP_PACKRAT_SERVER_ENDPOINT

    packrat-server:
        container_name: packrat-server
        image: packrat-server
        restart: always
        build:
            context: ../..
            dockerfile: ./conf/docker/server-prod.Dockerfile
            target: server
        ports:
            - $PACKRAT_SERVER_PORT:4000
        environment:
            - NODE_ENV=$NODE_ENV
            - REACT_APP_PACKRAT_SERVER_ENDPOINT=$REACT_APP_PACKRAT_SERVER_ENDPOINT
            - PACKRAT_DATABASE_URL=$PACKRAT_DATABASE_URL
            - PACKRAT_CLIENT_ENDPOINT=$PACKRAT_CLIENT_ENDPOINT
            - PACKRAT_ITOPS_EMAIL=$PACKRAT_ITOPS_EMAIL
            - PACKRAT_SESSION_SECRET=$PACKRAT_SESSION_SECRET
            - PACKRAT_EDAN_AUTH_KEY=$PACKRAT_EDAN_AUTH_KEY
            - PACKRAT_EDAN_SERVER=$PACKRAT_EDAN_SERVER
            - PACKRAT_EDAN_3D_API=$PACKRAT_EDAN_3D_API
            - PACKRAT_EDAN_APPID=$PACKRAT_EDAN_APPID
            - PACKRAT_EDAN_UPSERT_RESOURCE_ROOT=$PACKRAT_EDAN_UPSERT_RESOURCE_ROOT
            - PACKRAT_EDAN_STAGING_ROOT=$PACKRAT_EDAN_STAGING_ROOT
            - PACKRAT_EDAN_RESOURCES_HOTFOLDER=$PACKRAT_EDAN_RESOURCES_HOTFOLDER
            - PACKRAT_OCFL_STORAGE_ROOT=$PACKRAT_OCFL_STORAGE_ROOT
            - PACKRAT_OCFL_STAGING_ROOT=$PACKRAT_OCFL_STAGING_ROOT
            - PACKRAT_COOK_SERVER_URL=$PACKRAT_COOK_SERVER_URL
            - PACKRAT_AUTH_TYPE=$PACKRAT_AUTH_TYPE
            - PACKRAT_LDAP_SERVER=$PACKRAT_LDAP_SERVER
            - PACKRAT_LDAP_PASSWORD=$PACKRAT_LDAP_PASSWORD
            - PACKRAT_LDAP_CN=$PACKRAT_LDAP_CN
            - PACKRAT_LDAP_OU=$PACKRAT_LDAP_OU
            - PACKRAT_LDAP_DC=$PACKRAT_LDAP_DC
            - PACKRAT_SMTP_HOST=$PACKRAT_SMTP_HOST
            - PACKRAT_SMTP_PORT=$PACKRAT_SMTP_PORT
            - PACKRAT_SMTP_SECURE=$PACKRAT_SMTP_SECURE
            - PACKRAT_SMTP_AUTHUSER=$PACKRAT_SMTP_AUTHUSER
            - PACKRAT_SMTP_AUTHPASSWORD=$PACKRAT_SMTP_AUTHPASSWORD
            - PACKRAT_LOG_ROOT=$PACKRAT_LOG_ROOT
            - PACKRAT_SOLR_HOST=$PACKRAT_SOLR_HOST
            - PACKRAT_SOLR_PORT=$PACKRAT_SOLR_PORT
            - SHARP_IGNORE_GLOBAL_LIBVIPS=1
            - npm_config_arch=x64
            - npm_config_platform=linux
        depends_on:
            - s3fs

    s3fs:
        container_name: packrat-s3fs
        image: efrecon/s3fs:1.91
        restart: unless-stopped
        cap_add:
            - SYS_ADMIN
        security_opt:
            - 'apparmor:unconfined'
        devices:
            - /dev/fuse
        privileged: true
        volumes:
            - '/mnt/s3:/opt/s3fs/bucket:rshared'
            - '${HOME}/.passwd-s3fs:/opt/s3fs/.passwd-s3fs'
        environment:
            AWS_S3_BUCKET: '3d-api'
            AWS_S3_AUTHFILE: '/opt/s3fs/.passwd-s3fs'
            AWS_S3_URL: 'https://nyc3.digitaloceanspaces.com/'
            AWS_S3_MOUNT: '/opt/s3fs/bucket'
            S3FS_ARGS: 'allow_other,use_path_request_style,nonempty,default_acl=public-read'
            S3FS_DEBUG: 0
            UID: '1000'
            GID: '1000'

    db:
        container_name: packrat-db
        image: mariadb:10.5
        restart: always
        ports:
            - $PACKRAT_DB_PORT:3306
        environment:
            - MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD

    packrat-solr:
        container_name: packrat-solr
        image: packrat-solr
        restart: always
        build:
            context: ../..
            dockerfile: ./conf/docker/solr.Dockerfile
            target: solr
        ports:
            - $PACKRAT_SOLR_PORT:8983
        volumes:
            - ../../server/config/solr/data/:/var/solr/data/

networks:
    default:
        ipam:
            config:
                - subnet: 192.168.4.0/24
